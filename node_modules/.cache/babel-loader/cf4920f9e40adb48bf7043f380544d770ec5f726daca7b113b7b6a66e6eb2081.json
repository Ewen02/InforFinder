{"ast":null,"code":"export let InfoFinder;\n(function (_InfoFinder) {\n  let Tvmaze;\n  (function (_Tvmaze) {\n    async function GetMovies(query) {\n      let resultData;\n      // let result: true | ErrorResponse = {\n      //     error: undefined,\n      //     message: undefined, \n      //     code: undefined\n      // }\n\n      await fetch('https://api.tvmaze.com/search/shows?q=' + query).then(response => response.json()).then(data => {\n        //result = true;\n        resultData = data;\n      }).catch(r => {\n        resultData = [];\n        // result = {\n        //     error: r.name,\n        //     message: r.response.data,\n        //     code: r.response.status\n        // }\n      });\n      // console.log(typeof result);\n      // console.log(result);\n      return resultData;\n    }\n    _Tvmaze.GetMovies = GetMovies;\n  })(Tvmaze || (Tvmaze = _InfoFinder.Tvmaze || (_InfoFinder.Tvmaze = {})));\n})(InfoFinder || (InfoFinder = {}));","map":{"version":3,"names":["InfoFinder","_InfoFinder","Tvmaze","_Tvmaze","GetMovies","query","resultData","fetch","then","response","json","data","catch","r"],"sources":["/home/leq/Bureau/Save/self_project/InforFinder/src/components/tools/InfoFinder.tsx"],"sourcesContent":["export namespace InfoFinder {\n    export type ErrorResponse = {\n        error: string | undefined;\n        message: string | undefined;\n        code: number | undefined;\n    };\n\n    export namespace Tvmaze {\n        export async function GetMovies(query: string) {\n            let resultData!: [];\n            // let result: true | ErrorResponse = {\n            //     error: undefined,\n            //     message: undefined, \n            //     code: undefined\n            // }\n\n            await fetch('https://api.tvmaze.com/search/shows?q='+query)\n                .then(response => response.json())\n                .then(data => {\n                    //result = true;\n                    resultData = data;\n                })\n                .catch(r => {\n                    resultData = [];\n                    // result = {\n                    //     error: r.name,\n                    //     message: r.response.data,\n                    //     code: r.response.status\n                    // }\n                });\n            // console.log(typeof result);\n            // console.log(result);\n            return resultData;\n        }\n    }\n}"],"mappings":"AAAA,WAAAA,UAAA;AAmCC,WAAAC,WAAA;EAAA,IAAAC,MAAA;EAAA,WAAAC,OAAA;IA3Bc,eAAeC,SAASA,CAACC,KAAa,EAAE;MAC3C,IAAIC,UAAe;MACnB;MACA;MACA;MACA;MACA;;MAEA,MAAMC,KAAK,CAAC,wCAAwC,GAACF,KAAK,CAAC,CACtDG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACV;QACAL,UAAU,GAAGK,IAAI;MACrB,CAAC,CAAC,CACDC,KAAK,CAACC,CAAC,IAAI;QACRP,UAAU,GAAG,EAAE;QACf;QACA;QACA;QACA;QACA;MACJ,CAAC,CAAC;MACN;MACA;MACA,OAAOA,UAAU;IACrB;IAACH,OAAA,CAAAC,SAAA,GAAAA,SAAA;EAAA,GA1BYF,MAAM,KAANA,MAAM,GAAAD,WAAA,CAANC,MAAM,KAAAD,WAAA,CAANC,MAAM;AAAA,GAPVF,UAAU,KAAVA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}