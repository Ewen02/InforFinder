{"ast":null,"code":"import { useState } from \"react\";\nexport let InfoFinder;\n(function (_InfoFinder) {\n  let Tvmaze;\n  (function (_Tvmaze) {\n    function getMovies(query) {\n      const [resultData, setResultData] = useState([]);\n      let result = {\n        error: undefined,\n        message: undefined,\n        code: undefined\n      };\n      fetch('https://api.tvmaze.com/search/shows?q=' + query).then(response => response.json()).then(data => {\n        result = true;\n        setResultData(data);\n      }).catch(r => {\n        result = {\n          error: r.name,\n          message: r.response.data,\n          code: r.response.status\n        };\n      });\n      console.log(\"here\");\n      console.log(result);\n      return result ? resultData : result;\n    }\n    _Tvmaze.getMovies = getMovies;\n  })(Tvmaze || (Tvmaze = _InfoFinder.Tvmaze || (_InfoFinder.Tvmaze = {})));\n})(InfoFinder || (InfoFinder = {}));","map":{"version":3,"names":["useState","InfoFinder","_InfoFinder","Tvmaze","_Tvmaze","getMovies","query","resultData","setResultData","result","error","undefined","message","code","fetch","then","response","json","data","catch","r","name","status","console","log"],"sources":["/home/leq/Bureau/Save/self_project/InforFinder/src/components/tools/InfoFinder.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nexport namespace InfoFinder {\n    export type ErrorResponse = {\n        error: string | undefined;\n        message: string | undefined;\n        code: number | undefined;\n    };\n\n    export namespace Tvmaze {\n        export function getMovies(query: string) {\n            const [resultData, setResultData] = useState([]);\n            let result: true | ErrorResponse = {\n                error: undefined,\n                message: undefined, \n                code: undefined\n            }\n\n            fetch('https://api.tvmaze.com/search/shows?q='+query)\n                .then(response => response.json())\n                .then(data => {\n                    result = true;\n                    setResultData(data);\n                })\n                .catch(r => {\n                    result = {\n                        error: r.name,\n                        message: r.response.data,\n                        code: r.response.status\n                    }\n                });\n            console.log(\"here\");\n            console.log(result);\n            return result ? resultData : result;\n        }\n    }\n}"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,WAAAC,UAAA;AAkCC,WAAAC,WAAA;EAAA,IAAAC,MAAA;EAAA,WAAAC,OAAA;IA1Bc,SAASC,SAASA,CAACC,KAAa,EAAE;MACrC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;MAChD,IAAIS,MAA4B,GAAG;QAC/BC,KAAK,EAAEC,SAAS;QAChBC,OAAO,EAAED,SAAS;QAClBE,IAAI,EAAEF;MACV,CAAC;MAEDG,KAAK,CAAC,wCAAwC,GAACR,KAAK,CAAC,CAChDS,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACVT,MAAM,GAAG,IAAI;QACbD,aAAa,CAACU,IAAI,CAAC;MACvB,CAAC,CAAC,CACDC,KAAK,CAACC,CAAC,IAAI;QACRX,MAAM,GAAG;UACLC,KAAK,EAAEU,CAAC,CAACC,IAAI;UACbT,OAAO,EAAEQ,CAAC,CAACJ,QAAQ,CAACE,IAAI;UACxBL,IAAI,EAAEO,CAAC,CAACJ,QAAQ,CAACM;QACrB,CAAC;MACL,CAAC,CAAC;MACNC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBD,OAAO,CAACC,GAAG,CAACf,MAAM,CAAC;MACnB,OAAOA,MAAM,GAAGF,UAAU,GAAGE,MAAM;IACvC;IAACL,OAAA,CAAAC,SAAA,GAAAA,SAAA;EAAA,GAzBYF,MAAM,KAANA,MAAM,GAAAD,WAAA,CAANC,MAAM,KAAAD,WAAA,CAANC,MAAM;AAAA,GAPVF,UAAU,KAAVA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}