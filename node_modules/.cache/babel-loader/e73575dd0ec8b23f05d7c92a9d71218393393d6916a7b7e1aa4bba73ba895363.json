{"ast":null,"code":"export let InfoFinder;\n(function (_InfoFinder) {\n  let Tvmaze;\n  (function (_Tvmaze) {\n    function getMovies(query) {\n      let result = {\n        error: undefined,\n        message: undefined,\n        code: undefined\n      };\n      fetch('https://api.tvmaze.com/search/shows?q=' + query).then(response => response.json()).then(data => {\n        console.log(data);\n        result = data;\n      }).catch(r => {\n        result = {\n          error: r.name,\n          message: r.response.data,\n          code: r.response.status\n        };\n        console.error(r);\n      });\n      return result;\n    }\n    _Tvmaze.getMovies = getMovies;\n  })(Tvmaze || (Tvmaze = _InfoFinder.Tvmaze || (_InfoFinder.Tvmaze = {})));\n})(InfoFinder || (InfoFinder = {}));","map":{"version":3,"names":["InfoFinder","_InfoFinder","Tvmaze","_Tvmaze","getMovies","query","result","error","undefined","message","code","fetch","then","response","json","data","console","log","catch","r","name","status"],"sources":["/home/leq/Bureau/Save/self_project/InforFinder/src/components/tools/InfoFinder.tsx"],"sourcesContent":["export namespace InfoFinder {\n    export type ErrorResponse = {\n        error: string | undefined;\n        message: string | undefined;\n        code: number | undefined;\n    };\n\n    export namespace Tvmaze {\n        export function getMovies(query: string) {\n            let result: [] | ErrorResponse = {\n                error: undefined,\n                message: undefined, \n                code: undefined\n            }\n\n            fetch('https://api.tvmaze.com/search/shows?q='+query)\n                .then(response => response.json())\n                .then(data => {\n                    console.log(data);\n                    result = data;\n                })\n                .catch(r => {\n                    result = {\n                        error: r.name,\n                        message: r.response.data,\n                        code: r.response.status\n                    }\n                    console.error(r);\n                });\n            return result;\n        }\n    }\n}"],"mappings":"AAAA,WAAAA,UAAA;AAgCC,WAAAC,WAAA;EAAA,IAAAC,MAAA;EAAA,WAAAC,OAAA;IAxBc,SAASC,SAASA,CAACC,KAAa,EAAE;MACrC,IAAIC,MAA0B,GAAG;QAC7BC,KAAK,EAAEC,SAAS;QAChBC,OAAO,EAAED,SAAS;QAClBE,IAAI,EAAEF;MACV,CAAC;MAEDG,KAAK,CAAC,wCAAwC,GAACN,KAAK,CAAC,CAChDO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjBT,MAAM,GAAGS,IAAI;MACjB,CAAC,CAAC,CACDG,KAAK,CAACC,CAAC,IAAI;QACRb,MAAM,GAAG;UACLC,KAAK,EAAEY,CAAC,CAACC,IAAI;UACbX,OAAO,EAAEU,CAAC,CAACN,QAAQ,CAACE,IAAI;UACxBL,IAAI,EAAES,CAAC,CAACN,QAAQ,CAACQ;QACrB,CAAC;QACDL,OAAO,CAACT,KAAK,CAACY,CAAC,CAAC;MACpB,CAAC,CAAC;MACN,OAAOb,MAAM;IACjB;IAACH,OAAA,CAAAC,SAAA,GAAAA,SAAA;EAAA,GAvBYF,MAAM,KAANA,MAAM,GAAAD,WAAA,CAANC,MAAM,KAAAD,WAAA,CAANC,MAAM;AAAA,GAPVF,UAAU,KAAVA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}