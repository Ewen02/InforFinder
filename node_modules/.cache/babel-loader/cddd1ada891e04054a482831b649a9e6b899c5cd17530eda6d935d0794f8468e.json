{"ast":null,"code":"import { useState } from \"react\";\nexport let InfoFinder;\n(function (_InfoFinder) {\n  let Tvmaze;\n  (function (_Tvmaze) {\n    function GetMovies(query) {\n      const [resultData, setResultData] = useState([]);\n      // let result: true | ErrorResponse = {\n      //     error: undefined,\n      //     message: undefined, \n      //     code: undefined\n      // }\n\n      fetch('https://api.tvmaze.com/search/shows?q=' + query).then(response => response.json()).then(data => {\n        //result = true;\n        setResultData(data);\n      }).catch(r => {\n        setResultData([]);\n        // result = {\n        //     error: r.name,\n        //     message: r.response.data,\n        //     code: r.response.status\n        // }\n      });\n      // console.log(typeof result);\n      // console.log(result);\n      return resultData;\n    }\n    _Tvmaze.GetMovies = GetMovies;\n  })(Tvmaze || (Tvmaze = _InfoFinder.Tvmaze || (_InfoFinder.Tvmaze = {})));\n})(InfoFinder || (InfoFinder = {}));","map":{"version":3,"names":["useState","InfoFinder","_InfoFinder","Tvmaze","_Tvmaze","GetMovies","query","resultData","setResultData","fetch","then","response","json","data","catch","r"],"sources":["/home/leq/Bureau/Save/self_project/InforFinder/src/components/tools/InfoFinder.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nexport namespace InfoFinder {\n    export type ErrorResponse = {\n        error: string | undefined;\n        message: string | undefined;\n        code: number | undefined;\n    };\n\n    export namespace Tvmaze {\n        export function GetMovies(query: string) {\n            const [resultData, setResultData] = useState([]);\n            // let result: true | ErrorResponse = {\n            //     error: undefined,\n            //     message: undefined, \n            //     code: undefined\n            // }\n\n            fetch('https://api.tvmaze.com/search/shows?q='+query)\n                .then(response => response.json())\n                .then(data => {\n                    //result = true;\n                    setResultData(data);\n                })\n                .catch(r => {\n                    setResultData([]);\n                    // result = {\n                    //     error: r.name,\n                    //     message: r.response.data,\n                    //     code: r.response.status\n                    // }\n                });\n            // console.log(typeof result);\n            // console.log(result);\n            return resultData;\n        }\n    }\n}"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,WAAAC,UAAA;AAmCC,WAAAC,WAAA;EAAA,IAAAC,MAAA;EAAA,WAAAC,OAAA;IA3Bc,SAASC,SAASA,CAACC,KAAa,EAAE;MACrC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;MAChD;MACA;MACA;MACA;MACA;;MAEAS,KAAK,CAAC,wCAAwC,GAACH,KAAK,CAAC,CAChDI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACV;QACAL,aAAa,CAACK,IAAI,CAAC;MACvB,CAAC,CAAC,CACDC,KAAK,CAACC,CAAC,IAAI;QACRP,aAAa,CAAC,EAAE,CAAC;QACjB;QACA;QACA;QACA;QACA;MACJ,CAAC,CAAC;MACN;MACA;MACA,OAAOD,UAAU;IACrB;IAACH,OAAA,CAAAC,SAAA,GAAAA,SAAA;EAAA,GA1BYF,MAAM,KAANA,MAAM,GAAAD,WAAA,CAANC,MAAM,KAAAD,WAAA,CAANC,MAAM;AAAA,GAPVF,UAAU,KAAVA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}